servlet

웹화면으로 결과물을 출력해주는 클래스이다 
HttpServlet 클래스를 상속 받는다
tomcat(was)에 의해서 실행된다

URL형식

프로토콜://호스트:포트번호/Contextpath(프로젝트이름)/URLMapping


오버라이드 된 
@WebServlet() 안에 URLMapping 값을 넣음으로써 무엇이랑 연결되는지 정해줄 수 있다.

가장먼저 생성자가 호출된다(클래스이기 때문에, 지워도 괜찮다) 
그 뒤로 init()(서블릿의 설정을 담당한다) 호출 뒤 service()가 호출 
근데 없다면 doGET 메소드와 doPOST() 메소드가 자동으로 호출된다 

doGET() 이란 GET 방식의 요청을 처리하는 메소드이다

doPOST() 이란 POST 방식의 요청을 처리하는 메소드인데, 암호화(아이디, 비밀번호)를 거친다고 보면된다 근데 
어짜피 doPOST()로 처리한다 해도 암호화만 풀고 실상 일은 doGET()이 한다.  


통신으로 보자면 크게 정보 요청(request)과 정보 응답(response)이 있는데

request

여기서 중요한건 형식이 중요하다
request.setCharacterEncoding("UTF-8"); 

전송받은 파라미터 값은 모두 String값이다 
String ~~ = request.getParameter(태그 안에 있는 attribute값중에 하나인 name값을 인식해준다")

response

response는 응답을 해주는 객체이다

응답 
		 	
1. 서버 -> 클라이언트로 보내는 것이 응답(Response)이다
2. HttpServletResponse 클래스가 응답을 처리한다.
3. 어떤 MIME(html, json... 등등 응답을 뭘로 해야하는지) 타입으로 응답 할 것인지 결정해야한다. 반환타입이랑 비슷함
	1) HTML : text/html	     (태그를 만들어서 반환하는 경우)
	2) XML  : application/xml    (ajax 응답이 XML인 경우)
	3) JSON : application/json   (ajax 응답이 JSON인 경우)

예를 들어 응답하는 형식은 이렇게 작성한다.
response.setContentType("text/html; charset=UTF-8"); 

화면출력하는 메소드는 
reponse.getWriter().append(), write(), print(), println()
여기까지가 내보내주는 빨대가 꽃힌거, 뒤에가 정보를 보내주는 기능을 하는거

근데 PrintWriter out = response.getWriter() 선언하고
out.println(원하는 내용) 이렇게 쓰는게 더 좋다

그냥 system.out.println()이랑 비슷하다고 보면된다 그게 크롬으로 나오는거 뿐이지
 --------------------------------------------------------------------------------
jquery.com 들어가서 ui홈페이지 들어가서 다운로드 들가서 1.13.2 다운로드 받으면 되는데 위에 stable 
이라고 써져 있는거 누르면 다운로드 됨

압축풀고 webapp에서 resources 파일에 포함시키면됨

화면이 이동되지 않고 즉시 처리되면 ajax 처리가 된다고 보면 된다.

네이버 개발자 파파고 들어가서 
WEB 설정 웹 서비스 URL http://localhost 입력하고 가입하면됨 
등록하면 화면 안넘어가는데 당황하지말고 상단에 application가면 등록되어있음
api설정 들어가서
파파고 NMT API 가이드 코드 복사

con 은 바이트 기반 스트림이기 때문에
OutputStreamWriter 이나 DataoutputStream(WriteUTF메소드가 있는데 이게 편리하다
, UTF-8 처리를 따로 안해줘도 기능을 해주기 때문에)을 이용해서 길을 뚫어주면 편하다

주소창에서 값을 한번만 넘겨주는 (한번만 저장하는 저장소, 일회용저장소,다음 검색까지만 저장해준다) ex. 검색창 
1회용: HttpServletRequest
계속 유지되는 값(*어디에 저장했는지에 따라 달라짐*)
ex. 로그인(웹브라우저 닫기 전 까지는 계속 유지된다)
브라우저(30분): HttpSession
계속 데이터가 남아야하는 경우도 있으므로 이런경우엔 프로젝트내부에 저장한다, 서비스 종료시까지 저장되어 있다, 서비스 만들때 거의 쓸경우가 없으므로 상관없음
서비스종료: ServletContext

팝업창 같이 오늘 하루종일 열지 않기 아이디 기억하기 등등 이런 기능은 서버에서 해주는게 아니라 개인 클라이언트에서 기억하는것 

http://servlets.com 접속 COS File Upload Library(메뉴 3번째) 접속 가장 하단 cos-22.05.zip 
다운로드 

01Servlet 파일 우클릭 new -> dynamic web project 02_Jsp 제목 설정하고 마지막 3번째꺼 체크하고 만들기 만들어진 새로운 폴더 우클릭 properties 들어가서 java build path랑 java compiler 둘다 들어가서 11버전으로 바꾸는데 java build path는 module path 아래 있는 자바 편집(edit) 할때 11버전으로
바꾸기  

새로 생긴 폴더에서 webapp에서 우클릿 jsp파일 만들어 쓰면된다

스크립트릿(scriptlet) : 자바 코드를 인식해주는 태그 

부트스트랩 jsp 코드 따올수 있는 사이트

 톰캣 들어가서 Taglibs 들어가서 
Impl:
taglibs-standard-impl-1.2.5.jar (pgp, sha512)
Spec:
taglibs-standard-spec-1.2.5.jar (pgp, sha512)
이거 두개 다운받으면 된다.

